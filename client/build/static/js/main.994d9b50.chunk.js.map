{"version":3,"sources":["components/Map/RestroomInfo.js","components/Map/RestroomRatingButton.js","components/Map/Map.js","utils/mutations.js","utils/auth.js","components/Login/Login.js","components/SignUp/Signup.js","components/Pin/Pin.js","components/Nav/Nav.js","components/Restroom/restroom.js","components/wrapper/wrapper.js","App.js","serviceWorker.js","index.js"],"names":["RestroomInfo","props","restroom","name","street","city","state","MyComponent","useState","rating","setRating","className","form","type","style","backgroundColor","fontWeight","width","height","Review","value","onClick","rate","ratingValue","GoogleApiWrapper","apiKey","restrooms","setRestrooms","selectedRestroom","setSelectedRestroom","latitude","longitude","useEffect","fetch","then","res","json","data","google","zoom","center","lat","lng","map","position","clickable","id","onCloseClick","visible","LOGIN","gql","ADD_USER","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","window","location","assign","removeItem","Login","email","password","formState","setFormState","useMutation","login","error","handleFormSubmit","event","a","preventDefault","variables","mutationResponse","Auth","console","log","handleChange","target","to","onSubmit","htmlFor","placeholder","onChange","Signup","addUser","firstName","lastName","CustomPin","evt","Nav","role","loggedIn","href","logout","FetchRestrooms","loading","response","setState","results","Restrooms","accessible","unisex","comment","React","Component","Wrapper","children","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","coordinates","setCoordinates","success","coords","navigator","geolocation","getCurrentPosition","geoFindMe","ApolloProvider","exact","path","Map","component","Restroom","Marker","Rating","SignUp","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.994d9b50.chunk.js","sourcesContent":["import React from \"react\";\n\nconst RestroomInfo = (props) => {\n  const { restroom } = props;\n  return (\n    <div>\n      <h3>{restroom.name}</h3>\n      <h4>{`${restroom.street}, ${restroom.city}, ${restroom.state}`}</h4>\n    </div>\n  );\n};\n\nexport default RestroomInfo;\n","import React, { useState } from 'react'\nimport { Rating } from 'react-simple-star-rating'\n\nexport default function MyComponent() {\n  const [rating, setRating] = useState(0) // initial rating value\n\n  // Catch Rating value\n  const handleRating = (rate) => {\n    setRating(rate)\n    // Some logic\n  }\n\n  return (\n    \n    <div className=\"container my-1\" form={{type:\"text\"}}  style={{backgroundColor: \"blue\"}}>\n    <form>\n  <label style={{fontWeight:'bold'}} >\n    Written Review:\n    <textArea style={{width: '601px', height: '100px'}} type=\"text\" Review=\"review\" />\n  </label>\n  <input type=\"submit\" value=\"Submit\" />\n</form>\n    <Rating onClick={handleRating} ratingValue={rating} /* Rating Props */ />\n    <form type=\"text\" name=\"field[]\" />\n    </div>\n    \n  )\n}","import React, { useState, useEffect } from \"react\";\nimport { Map, Marker, GoogleApiWrapper, InfoWindow } from \"google-maps-react\";\nimport RestroomInfo from \"./RestroomInfo\";\nimport MyComponent from \"./RestroomRatingButton\";\n\n\nexport const MapComponent = (props) => {\n  const [restrooms, setRestrooms] = useState(null);\n  const [selectedRestroom, setSelectedRestroom] = useState(null);\n  const { latitude, longitude } = props;\n\n\n\n  useEffect(() => {\n    if (latitude && longitude) {\n      fetch(\n        `https://www.refugerestrooms.org/api/v1/restrooms/by_location?page=1&per_page=10&offset=0&lat=${latitude}&lng=${longitude}`\n      )\n        .then((res) => {\n          return res.json();\n        })\n        .then((data) => {\n          setRestrooms(data);\n        });\n    }\n  }, [latitude, longitude]);\n\n  return (\n    <div className=\"map-area\">\n      <Map\n        google={props.google}\n        zoom={13}\n        center={{\n          lat: latitude,\n\n          lng: longitude,\n        }}\n      >\n        {restrooms &&\n          restrooms.map((restroom) => (\n            <Marker\n              key={restroom.id}\n              position={{\n                lat: restroom.latitude,\n                lng: restroom.longitude,\n              }}\n              onClick={() => setSelectedRestroom(restroom)}\n              clickable\n            ></Marker>\n          ))}\n        {selectedRestroom && (\n          <InfoWindow\n            onCloseClick={() => {\n              setSelectedRestroom(null);\n            }}\n            position={{\n              lat: selectedRestroom.latitude,\n              lng: selectedRestroom.longitude,\n            }}\n            visible={selectedRestroom !== null}\n          >\n            <RestroomInfo restroom={selectedRestroom} />\n\n            \n            <MyComponent />\n            \n\n          </InfoWindow>\n        )}\n      </Map>\n    </div>\n  );\n};\n\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyCYXrxhue2vZfkXo6rIlk_uapWKN3wbQ9o\",\n})(MapComponent);\n","import { gql } from '@apollo/client';\n\nexport const RATING = gql`\n  mutation ratings($email: String!, $password: String!) {\n    Rating(email: $email, password: $password) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n\n\nexport const LOGIN = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n\nexport const ADD_DONATION = gql`\n  mutation addDonation($donation: [ID]!) {\n    addDonation(donation: $donation) {\n      purchaseDate\n      donation {\n        _id\n        name\n        usdAmt\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\n  mutation addUser(\n    $firstName: String!\n    $lastName: String!\n    $email: String!\n    $password: String!\n  ) {\n    addUser(\n      firstName: $firstName\n      lastName: $lastName\n      email: $email\n      password: $password\n    ) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n","import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token);\n  }\n\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n\n    window.location.assign('/');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { Link } from 'react-router-dom';\nimport { LOGIN } from '../../utils/mutations';\nimport Auth from '../../utils/auth';\n\nfunction Login(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [login, { error }] = useMutation(LOGIN);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const mutationResponse = await login({\n        variables: { email: formState.email, password: formState.password },\n      });\n      const token = mutationResponse.data.login.token;\n      Auth.login(token);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"container my-1\" >\n      <Link to=\"/signup\">← Go to Signup</Link>\n\n      <h2>Login</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email address:</label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\" >\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        {error ? (\n          <div>\n            <p className=\"error-text\">The provided credentials are incorrect</p>\n          </div>\n        ) : null}\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Login;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport Auth from '../../utils/auth';\nimport { ADD_USER } from '../../utils/mutations';\n\nfunction Signup(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [addUser] = useMutation(ADD_USER);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    const mutationResponse = await addUser({\n      variables: {\n        email: formState.email,\n        password: formState.password,\n        firstName: formState.firstName,\n        lastName: formState.lastName,\n      },\n    });\n    const token = mutationResponse.data.addUser.token;\n    Auth.login(token);\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"container my-1\">\n      <Link to=\"/login\">← Go to Login</Link>\n\n      <h2>Signup</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"firstName\">First Name:</label>\n          <input\n            placeholder=\"First\"\n            name=\"firstName\"\n            type=\"firstName\"\n            id=\"firstName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"lastName\">Last Name:</label>\n          <input\n            placeholder=\"Last\"\n            name=\"lastName\"\n            type=\"lastName\"\n            id=\"lastName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email:</label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Signup;\n","import React from 'react';\nimport {Pin} from 'react-google-maps';\n\n\nconst CustomPin = (props) => {\n    const {id} = props;\n\n    const onPinClick = (evt) => {\n        console.log(id);\n    };\n\n    return (\n        <Pin\n            onClick={onPinClick}\n            {...props}\n        />\n    );\n};\n\nexport default CustomPin;","import React from \"react\";\nimport Auth from \"../../utils/auth\";\nimport { Link } from \"react-router-dom\";\n\nfunction Nav() {\n\n  function showNavigation() {\n    if (Auth.loggedIn()) {\n      return (\n        <ul className=\"flex-row\">\n          <li className=\"mx-1\">\n            <Link to=\"/Home\">\n              Home\n            </Link>\n          </li>\n          <li className=\"mx-1\">\n            {/* this is not using the Link component to logout or user and then refresh the application to the start */}\n            <a href=\"/\" onClick={() => Auth.logout()}>\n              Logout\n            </a>\n          </li>\n        </ul>\n      );\n    } else {\n      return (\n        <ul className=\"flex-row\">\n          <li className=\"mx-1\">\n            <Link to=\"/signup\">\n              Signup\n            </Link>\n          </li>\n          <li className=\"mx-1\">\n            <Link to=\"/login\">\n              Login\n            </Link>\n          </li>\n        </ul>\n      );\n    }\n  }\n\n  return (\n    <header className=\"flex-row px-1\">\n      <h1>\n        <Link to=\"/\">\n          <span role=\"img\" aria-label=\"Toilet\"></span>\n          Spot-A-Pot\n        </Link>\n      </h1>\n\n      <nav>\n        {showNavigation()}\n      </nav>\n    </header>\n  );\n}\n\nexport default Nav;\n","import React from 'react';\n\nexport default class FetchRestrooms extends React.Component {\n    state = {\n        loading: true,\n        restroom: null\n    }\n    \n    async componentDidMount() {\n        const url = \"https://www.refugerestrooms.org/api/v1/restrooms\";\n        const response = await fetch(url);\n        const data = await response.json();\n        this.setState({restroom: data.results, loading: false })\n        console.log(data);\n\n    }\n\n    render() {\n    return (\n    <div>\n    {this.state.loading || !this.state.restroom ? (\n    <div>loading...</div>\n    ) : ( \n        <div>{this.state.Restrooms.name}</div>,\n        <div>{this.state.Restrooms.accessible}</div>,\n        <div>{this.state.Restrooms.unisex}</div>,\n        <div>{this.state.Restrooms.comment}</div>\n    \n    )}\n</div>\n    );\n\n    }\n\n}","import React from \"react\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from \"@apollo/client\";\nimport { setContext } from \"@apollo/client/link/context\";\n\nimport Map from \"./components/Map/Map\";\nimport Login from \"./components/Login/Login\";\nimport SignUp from \"./components/SignUp/Signup\";\nimport Rating from \"./components/Rating/Rating\";\nimport Marker from \"./components/Pin/Pin\";\nimport Nav from \"./components/Nav/Nav\";\nimport Restroom from \"./components/Restroom/restroom\";\nimport { GoogleApiWrapper } from \"google-maps-react\";\nimport Wrapper from \"./components/wrapper/wrapper\"\n\n//import { selectionSetMatchesResult } from \"@apollo/client/cache/inmemory/helpers\";\n\n//import Home from './components/Home/Home'\n//import Home from './pages/Home';\n//import Maps from './components/Maps';\n//import Detail from './pages/Detail';\n//import NoMatch from './pages/NoMatch';\n//import Login from './components/Login/Login';\n//import Signup from './pages/Signup';\n//import Nav from './components/Nav';\n//import { AppProvider } from './utils/GlobalState';\n//import LandingPage from './componets/LandingPAge';\n\nconst httpLink = createHttpLink({\n  uri: \"/graphql\",\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem(\"id_token\");\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : \"\",\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\n\nfunction App() {\n\n  const [coordinates, setCoordinates] = useState({latitude:null, longitude:null});\n\n  \n  useEffect(() => {\n    geoFindMe();\n  }, []);\n\n \n  function geoFindMe() {\n    function success(position) {\n      const latitude = position.coords.latitude;\n      const longitude = position.coords.longitude;\n      console.log(latitude, longitude);\n      setCoordinates({latitude, longitude})\n    }\n\n    function error() {\n      console.log(\"Unable to retrieve your location\");\n    }\n    if (!navigator.geolocation) {\n      console.log(\"Geolocation is not supported by your browser\");\n    } else {\n      navigator.geolocation.getCurrentPosition(success, error);\n    }\n  }\n\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <Nav />\n        <Wrapper>\n          <Switch>\n          <Route exact path=\"/\"  >\n          <Map latitude={coordinates.latitude} longitude={coordinates.longitude}/>\n          </Route>\n          <Route exact path=\"/Restroom\" component={Restroom} />\n          <Route exact path=\"/Login\" component={Login} />\n          <Route exact path=\"/Marker\" component={Marker} />\n          <Route exact path=\"/Nav\" component={Nav} />\n          <Route exact path=\"/Rating\" component={Rating} />\n          <Route exact path=\"/SignUp\" component={SignUp} />\n          </Switch>\n        </Wrapper>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (\n    process.env.NODE_ENV === 'production' &&\n    'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}